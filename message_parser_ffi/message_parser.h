/*! \file */
/*******************************************
 *                                         *
 *  File auto-generated by `::safer_ffi`.  *
 *                                         *
 *  Do not manually edit this file.        *
 *                                         *
 *******************************************/

#ifndef __RUST_MESSAGE_PARSER_FFI__
#define __RUST_MESSAGE_PARSER_FFI__
#ifdef __cplusplus
extern "C" {
#endif


#include <stdbool.h>

/** <No documentation available> */
typedef struct TextResultForQt {
    /** \brief
     *  whether to use `Text.RichText` instead of the faster `Text.StyledText`
     *  https://doc.qt.io/archives/qt-5.15/qml-qtquick-text.html#textFormat-prop
     */
    bool advanced;

    /** \brief
     *  text field for `QML Type: Text` https://doc.qt.io/archives/qt-5.15/qml-qtquick-text.html#textFormat-prop
     *
     *  the clickable text is prefixed with a keyword telling you how to handle it:
     *  - `hashtag`: open search
     *  - `link` and `labled-link`: open the link - value contains the link destination object as json (so ui knows wether it contains unicode).
     *  - `email`: offer to start chat with email address
     *  - `bcs`: bot command suggestion, prefill draft with value
     */
    char * html;
} TextResultForQt_t;

/** \brief
 *  frees the TextResultForQt
 */
void
free_text_result_for_qt (
    TextResultForQt_t result);


#include <stddef.h>
#include <stdint.h>

/** \brief
 *  Modes of the parser, which element set to parse
 *
 *  see https://github.com/deltachat/message-parser/blob/main/spec.md for details
 */
/** \remark Has the same ABI as `uint8_t` **/
#ifdef DOXYGEN
typedef
#endif
enum ParsingMode {
    /** \brief
     *  Email addresses, Links, Bot command suggestions and hashtags
     *
     *  Basically the text displayed is not changed, just clickable
     */
    PARSING_MODE_TEXT,
    /** \brief
     *  The desktop set includes everythin of the text set and additionally:
     *  - Delimited Email addresses: `<hello@delta.chat>`
     *  - Delimited Links: `<http://example.org>`
     *  - Labeled Links: `[Name](url)`
     */
    PARSING_MODE_DESKTOP,
    /** \brief
     *  Desktop set additionally to a markdown subset like code blocks and bold and italics
     */
    PARSING_MODE_MARKDOWN,
}
#ifndef DOXYGEN
; typedef uint8_t
#endif
ParsingMode_t;

/** \brief
 *  Pretty-prints a TextResultForQt using Rust's formatting logic.
 */
TextResultForQt_t
parse_to_text_result_for_qt (
    char const * text,
    ParsingMode_t mode);

/** \brief
 *  Pretty-prints a TextResultForQt using Rust's formatting logic.
 */
void
print_text_result_for_qt (
    TextResultForQt_t const * result);


#ifdef __cplusplus
} /* extern \"C\" */
#endif

#endif /* __RUST_MESSAGE_PARSER_FFI__ */
